@page "/TextEditor/{TextId}"
@attribute [Authorize(Roles = "admin")]
@inherits OwningComponentBase
@inject NavigationManager _navigationManager
@using Microsoft.Extensions.DependencyInjection
@using ClassLibrary.Services
@using ClassLibrary.Models.Database
@using ClassLibrary.Models.Enums

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    @if (TextPage != null)
    {
        <MudTextField T="string" Label="Titel" @bind-Value="@TextPage.Title" Variant="Variant.Outlined"></MudTextField>
        <MudSelect @bind-Value="@TextPage.Type" T="@TextType" Label="Typ">
            @foreach (var type in Enum.GetValues<TextType>())
            {
                <MudSelectItem Value="@type"/>
            }
        </MudSelect>
        <MudCheckBox @bind-Checked="@TextPage.IsPrivate" Label="Privat"></MudCheckBox>
        <MudTextField Label="Text" Lines="10" @bind-Value="@TextPage.Text" Variant="Variant.Outlined"></MudTextField>
        
        <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@Save">Speichern</MudButton>
    }
    else
    {
        <h1>Loading...</h1>
    }
</MudContainer>

@code {
    [Parameter]
    public string TextId { get; set; }

    private TextPage TextPage { get; set; }
    
    private DatabaseService DatabaseService { get; set; }
    private BuilderService BuilderService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DatabaseService = ScopedServices.GetRequiredService<DatabaseService>();
        BuilderService = ScopedServices.GetRequiredService<BuilderService>();
        TextPage = Id == 0 ? new TextPage() : await DatabaseService.LoadText(Id, true);
    }

    private async Task Save()
    {
        await DatabaseService.SaveText(TextPage);
        await BuildStatic();
        _navigationManager.NavigateTo("TextEditorList");
    }
    
    private async Task BuildStatic()
    {
        await BuilderService.Build(TextPage);
    }
    
    private int Id => int.Parse(TextId);
}