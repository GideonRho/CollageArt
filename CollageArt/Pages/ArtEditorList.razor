@page "/ArtEditorList"
@attribute [Authorize(Roles = "admin")]
@inherits OwningComponentBase
@inject NavigationManager _navigationManager
@using Microsoft.Extensions.DependencyInjection
@using ClassLibrary.Services
@using ClassLibrary.Models.Database
@using ClassLibrary.Models.Filter

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Bilder</MudText>
    <MudSelect ValueChanged="@SetCategory" T="@Category" Label="Kategorie">
        @foreach (var category in Categories)
        {
            <MudSelectItem Value="@category"/>
        }
    </MudSelect>
    <br/>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ResetFilter">Zur√ºcksetzen</MudButton>
    <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
    <MudPaper Width="600px">
        @foreach (var art in ArtList)
        {
            <MudList Clickable="true">
                <MudListItem Text=@art.Title OnClick="() => EditArt(art)"/>
            </MudList>
        }
    </MudPaper>
    <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@CreateArt">Neues Bild erstellen</MudButton>
</MudContainer>

@code {
    
    private List<Art> ArtList { get; set; }
    private List<Category> Categories { get; set; }
    private ArtFilter Filter { get; } = new();

    private DatabaseService DatabaseService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DatabaseService = ScopedServices.GetRequiredService<DatabaseService>();
        Categories = await DatabaseService.SearchCategories(new CategoryFilter(), true);
        await Refresh();
    }

    private async Task Refresh()
    {
        ArtList = await DatabaseService.SearchArt(Filter);
    }

    private async Task SetCategory(Category category)
    {
        Filter.Category = category;
        await Refresh();
    }

    private async Task ResetFilter()
    {
        Filter.Category = null;
        await Refresh();
    }
    
    private void EditArt(Art art)
    {
        _navigationManager.NavigateTo($"ArtEditor/{art.Id}");
    }

    private void CreateArt()
    {
        _navigationManager.NavigateTo($"ArtEditor/0");
    }
    
}