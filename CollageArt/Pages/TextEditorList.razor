@page "/TextEditorList"
@attribute [Authorize(Roles = "admin")]
@inherits OwningComponentBase
@inject NavigationManager _navigationManager
@using Microsoft.Extensions.DependencyInjection
@using ClassLibrary.Services
@using ClassLibrary.Models.Database
@using ClassLibrary.Models.Filter

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
    <MudText Typo="Typo.h3" GutterBottom="true">Texte</MudText>
    <MudPaper Width="600px">
        @foreach (var text in TextList)
        {
            <MudList Clickable="true">
                <MudListItem Text=@text.Title OnClick="() => EditText(text)"/>
            </MudList>
        }
    </MudPaper>
    <MudDivider DividerType="DividerType.Middle" Class="my-6"/>
    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@CreateText">Neuen Text erstellen</MudButton>
</MudContainer>

@code {
    private List<TextPage> TextList { get; set; }
    private TextFilter Filter { get; } = new();

    private DatabaseService DatabaseService { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DatabaseService = ScopedServices.GetRequiredService<DatabaseService>();
        TextList = await DatabaseService.SearchText(Filter);
    }

    private void EditText(TextPage text)
    {
        _navigationManager.NavigateTo($"textEditor/{text.Id}");
    }

    private void CreateText()
    {
        _navigationManager.NavigateTo($"textEditor/0");
    }
}